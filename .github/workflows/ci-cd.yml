name: CI/CD Pipeline - Manual Deploy

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_IMAGE_NAME: ci-simulated-deploy
  
jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install pytest flake8
    
    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      continue-on-error: true
    
    - name: Run tests
      run: |
        echo "Running tests..."
        python -c "import sys; print(f'Python {sys.version}')"
        # Add your test commands here when you have tests
        # pytest tests/ -v
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Build Docker image
      run: |
        docker build -t ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }} .
        docker tag ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }} ${{ env.DOCKER_IMAGE_NAME }}:latest
    
    - name: Test Docker image
      run: |
        echo "Testing Docker image..."
        docker run --rm ${{ env.DOCKER_IMAGE_NAME }}:latest python --version
        echo "Docker image built and tested successfully!"
    
    - name: Save Docker image as artifact
      run: |
        docker save ${{ env.DOCKER_IMAGE_NAME }}:latest -o docker-image.tar
        gzip docker-image.tar
    
    - name: Upload Docker image artifact
      uses: actions/upload-artifact@v4
      with:
        name: docker-image-${{ github.sha }}
        path: docker-image.tar.gz
        retention-days: 7
    
    - name: Display deployment instructions
      run: |
        echo "=================================="
        echo "âœ… BUILD SUCCESSFUL!"
        echo "=================================="
        echo ""
        echo "ðŸ“¦ Docker image has been built and saved as an artifact."
        echo ""
        echo "To deploy manually on your local machine:"
        echo "1. Go to the 'Actions' tab in GitHub"
        echo "2. Click on this workflow run"
        echo "3. Download the 'docker-image-${{ github.sha }}' artifact"
        echo "4. Extract the downloaded zip file"
        echo "5. Run the following commands:"
        echo ""
        echo "   gunzip docker-image.tar.gz"
        echo "   docker load -i docker-image.tar"
        echo "   docker run --rm ${{ env.DOCKER_IMAGE_NAME }}:latest"
        echo ""
        echo "=================================="